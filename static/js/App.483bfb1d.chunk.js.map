{"version":3,"sources":["lang/locales/es_ES.js","lang/entries/en-US.js","lang/entries/en-US-rtl.js","lang/index.js","lang/entries/es-ES.js","components/common/ColorSwitcher.js","components/common/react-notifications/NotificationManager.js","components/common/react-notifications/Notification.js","components/common/react-notifications/Notifications.js","components/common/react-notifications/NotificationContainer.js","App.js","lang/locales/en_US.js","helpers/Utils.js"],"names":["module","exports","EnLang","messages","enMessages","locale","data","appLocaleData","AppLocale","en","enLang","es","esMessages","enrtl","addLocaleData","ColorSwitcher","props","getContainer","ReactDOM","findDOMNode","toggle","e","preventDefault","isOpen","state","removeEvents","addEvents","setState","changeThemeColor","color","localStorage","setItem","themeColorStorageKey","setTimeout","window","location","reload","forEach","event","document","addEventListener","handleDocumentClick","removeEventListener","container","contains","target","changeRadius","radius","body","classList","remove","add","themeRadiusStorageKey","selectedColor","getItem","this","className","map","key","href","onClick","FormGroup","Label","for","CustomInput","type","name","id","label","inline","defaultChecked","onChange","Component","Constants","listNotify","notify","defaultNotify","replace","c","r","Math","random","toString","title","message","timeOut","customClassName","priority","unshift","Object","assign","push","emitChange","create","notification","filter","n","emit","callback","addListener","removeListener","EventEmitter","Notification","componentDidMount","timer","requestHide","componentWillUnmount","clearTimeout","handleClick","onRequestHide","classnames","role","React","defaultProps","Notifications","handleRequestHide","notifications","enterTimeout","leaveTimeout","length","TransitionGroup","Date","getTime","CSSTransition","classNames","timeout","exit","enter","NotificationContainer","NotificationManager","removeChangeListener","handleStoreChange","addChangeListener","ViewMain","lazy","ViewApp","ViewError","App","getDirection","isRtl","currentAppLocale","Fragment","isMultiColorActive","fallback","path","render","exact","to","connect","settings","direction","defaultDirection","localValue","setDirection"],"mappings":"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","file":"static/js/App.483bfb1d.chunk.js","sourcesContent":["/* Gogo Language Texts\r\n\r\nTable of Contents\r\n\r\n01.General\r\n02.User Login, Logout, Register\r\n03.Menu\r\n04.Error Page\r\n*/\r\n\r\nmodule.exports = {\r\n  /* 01.General */\r\n  \"general.copyright\": \"Gogo React © Todos los derechos reservados.\",\r\n\r\n  /* 02.Inicio de sesión de usuario, cierre de sesión, registro */\r\n  \"user.login-title\": \"Iniciar sesión\",\r\n  \"user.register\": \"Registro\",\r\n  \"user.forgot-password\": \"Se te olvidó tu contraseña\",\r\n  \"user.email\": \"Email\",\r\n  \"user.password\": \"Contraseña\",\r\n  \"user.forgot-password-question\": \"¿Contraseña olvidada?\",\r\n  \"user.fullname\": \"Nombre completo\",\r\n  \"user.login-button\": \"INICIAR SESIÓN\",\r\n  \"user.register-button\": \"REGISTRO\",\r\n  \"user.reset-password-button\": \"REINICIAR\",\r\n  \"user.buy\": \"COMPRAR\",\r\n  \"user.username\": \"Nombre de Usuario\",\r\n\r\n  /* 03.Menú */\r\n  \"menu.app\": \"Inicio\",\r\n  \"menu.dashboards\": \"Tableros\",\r\n  \"menu.gogo\": \"Gogo\",\r\n  \"menu.start\": \"Comienzo\",\r\n  \"menu.second-menu\": \"Segundo menú\",\r\n  \"menu.second\": \"Segundo\",\r\n  \"menu.ui\": \"IU\",\r\n  \"menu.charts\": \"Gráficos\",\r\n  \"menu.chat\": \"Chatea\",\r\n  \"menu.survey\": \"Encuesta\",\r\n  \"menu.todo\": \"Notas\",\r\n  \"menu.search\": \"Búsqueda\",\r\n  \"menu.docs\": \"Docs\",\r\n  \"menu.blank-page\": \"Blank Page\",\r\n  /* 04.Error  */\r\n  \"pages.error-title\": \"Vaya, parece que ha ocurrido un error!\",\r\n  \"pages.error-code\": \"Código de error\",\r\n  \"pages.go-back-home\": \"REGRESAR A INICIO\"\r\n};\r\n","import appLocaleData from 'react-intl/locale-data/en';\r\nimport enMessages from '../locales/en_US';\r\n\r\nconst EnLang = {\r\n    messages: {\r\n        ...enMessages\r\n    },\r\n    locale: 'en-US',\r\n    data: appLocaleData\r\n};\r\nexport default EnLang;","import appLocaleData from 'react-intl/locale-data/en';\r\nimport enMessages from '../locales/en_US';\r\n\r\nconst EnLangRtl = {\r\n    messages: {\r\n        ...enMessages\r\n    },\r\n    locale: 'en-US',\r\n    data: appLocaleData\r\n};\r\nexport default EnLangRtl;","import { addLocaleData } from 'react-intl';\r\nimport enLang from './entries/en-US';\r\nimport esLang from './entries/es-ES';\r\nimport enRtlLang from './entries/en-US-rtl';\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    es: esLang,\r\n    enrtl:enRtlLang\r\n};\r\naddLocaleData(AppLocale.en.data);\r\naddLocaleData(AppLocale.es.data);\r\naddLocaleData(AppLocale.enrtl.data);\r\n\r\nexport default AppLocale;\r\n","import appLocaleData from 'react-intl/locale-data/es';\r\nimport esMessages from '../locales/es_ES';\r\n\r\nconst EsLang = {\r\n    messages: {\r\n        ...esMessages\r\n    },\r\n    locale: 'es-ES',\r\n    data: appLocaleData\r\n};\r\nexport default EsLang;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  themeColorStorageKey,\r\n  themeRadiusStorageKey\r\n} from '../../constants/defaultValues';\r\nimport { FormGroup, Label, CustomInput } from 'reactstrap';\r\nclass ColorSwitcher extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      isOpen: false,\r\n      selectedColor: localStorage.getItem(themeColorStorageKey),\r\n      radius: localStorage.getItem(themeRadiusStorageKey) || 'rounded'\r\n    };\r\n    this.removeEvents();\r\n  }\r\n\r\n  getContainer = () => {\r\n    return ReactDOM.findDOMNode(this);\r\n  };\r\n\r\n  toggle = e => {\r\n    e.preventDefault();\r\n    const isOpen = this.state.isOpen;\r\n    if (!isOpen) {\r\n      this.addEvents();\r\n    } else {\r\n      this.removeEvents();\r\n    }\r\n    this.setState({\r\n      isOpen: !isOpen\r\n    });\r\n  };\r\n  changeThemeColor = (e, color) => {\r\n    e.preventDefault();\r\n    localStorage.setItem(themeColorStorageKey, color);\r\n    this.toggle(e);\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 500);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.changeRadius(this.state.radius);\r\n  }\r\n\r\n  addEvents = () => {\r\n    ['click', 'touchstart'].forEach(event =>\r\n      document.addEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n  removeEvents = () => {\r\n    ['click', 'touchstart'].forEach(event =>\r\n      document.removeEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  handleDocumentClick = e => {\r\n    const container = this.getContainer();\r\n    if (container.contains(e.target) || container === e.target) {\r\n      return;\r\n    }\r\n    this.toggle(e);\r\n  };\r\n  changeRadius = radius => {\r\n    if (radius === 'flat') {\r\n      document.body.classList.remove('rounded');\r\n    } else {\r\n      document.body.classList.add('rounded');\r\n    }\r\n    this.setState({\r\n      radius\r\n    });\r\n    localStorage.setItem(themeRadiusStorageKey, radius);\r\n  };\r\n\r\n  render() {\r\n    const { selectedColor, radius } = this.state;\r\n    return (\r\n      <div className={`theme-colors ${this.state.isOpen ? 'shown' : ''}`}>\r\n        <div className=\"p-4\">\r\n          <p className=\"text-muted mb-2\">Light Theme</p>\r\n          <div className=\"d-flex flex-row justify-content-between mb-4\">\r\n            {['purple', 'blue', 'green', 'orange', 'red'].map(color => (\r\n              <a\r\n                key={`light.${color}`}\r\n                href={`#light.${color}`}\r\n                className={`theme-color theme-color-${color} ${\r\n                  selectedColor === `light.${color}` ? 'active' : ''\r\n                }`}\r\n                onClick={e => this.changeThemeColor(e, `light.${color}`)}\r\n              >\r\n                <span>`light.${color}`</span>\r\n              </a>\r\n            ))}\r\n          </div>\r\n          <p className=\"text-muted mb-2\">Dark Theme</p>\r\n          <div className=\"d-flex flex-row justify-content-between\">\r\n            {['purple', 'blue', 'green', 'orange', 'red'].map(color => (\r\n              <a\r\n                key={`dark.${color}`}\r\n                href={`#dark.${color}`}\r\n                className={`theme-color theme-color-${color} ${\r\n                  selectedColor === `dark.${color}` ? 'active' : ''\r\n                }`}\r\n                onClick={e => this.changeThemeColor(e, `dark.${color}`)}\r\n              >\r\n                <span>`dark.${color}`</span>\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\" pb-0 pl-4 pt-4\">\r\n          <FormGroup>\r\n            <Label for=\"radiusRadio\">Border Radius </Label>\r\n            <div>\r\n              <CustomInput\r\n                type=\"radio\"\r\n                name=\"radiusRadio\"\r\n                id=\"rounded\"\r\n                label=\"Rounded\"\r\n                inline\r\n                defaultChecked={radius === 'rounded'}\r\n                onChange={() => this.changeRadius('rounded')}\r\n              />\r\n              <CustomInput\r\n                type=\"radio\"\r\n                name=\"radiusRadio\"\r\n                id=\"flat\"\r\n                label=\"Flat\"\r\n                inline\r\n                defaultChecked={radius === 'flat'}\r\n                onChange={() => this.changeRadius('flat')}\r\n              />\r\n            </div>\r\n          </FormGroup>\r\n        </div>\r\n\r\n        <a href=\"#section\" className=\"theme-button\" onClick={this.toggle}>\r\n          {' '}\r\n          <i className=\"simple-icon-magic-wand\" />{' '}\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorSwitcher;\r\n","import { EventEmitter } from 'events';\r\n\r\nconst createUUID = () => {\r\n  const pattern = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\r\n  return pattern.replace(/[xy]/g, (c) => {\r\n    const r = (Math.random() * 16) | 0;\r\n    const v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\nconst Constants = {\r\n  CHANGE: 'change',\r\n  PRIMARY: 'primary',\r\n  SECONDARY: 'secondary',\r\n  INFO: 'info',\r\n  SUCCESS: 'success',\r\n  WARNING: 'warning',\r\n  ERROR: 'error'\r\n};\r\n\r\nclass NotificationManager extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n    this.listNotify = [];\r\n  }\r\n\r\n  create(notify) {\r\n    const defaultNotify = {\r\n      id: createUUID(),\r\n      type: 'info',\r\n      title: null,\r\n      message: null,\r\n      timeOut: 5000,\r\n      customClassName:\"\"\r\n    };\r\n    if (notify.priority) {\r\n      this.listNotify.unshift(Object.assign(defaultNotify, notify));\r\n    } else {\r\n      this.listNotify.push(Object.assign(defaultNotify, notify));\r\n    }\r\n    this.emitChange();\r\n  }\r\n\r\n  \r\n  primary(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.PRIMARY,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName\r\n    });\r\n  }\r\n\r\n  secondary(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.SECONDARY,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName\r\n    });\r\n  }\r\n\r\n  info(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.INFO,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName\r\n    });\r\n  }\r\n\r\n  success(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.SUCCESS,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName\r\n    });\r\n  }\r\n\r\n  warning(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.WARNING,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName\r\n    });\r\n  }\r\n\r\n  error(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.ERROR,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName\r\n    });\r\n  }\r\n\r\n  remove(notification) {\r\n    this.listNotify = this.listNotify.filter(n => notification.id !== n.id);\r\n    this.emitChange();\r\n  }\r\n\r\n  emitChange() {\r\n    this.emit(Constants.CHANGE, this.listNotify);\r\n  }\r\n\r\n  addChangeListener(callback) {\r\n    this.addListener(Constants.CHANGE, callback);\r\n  }\r\n\r\n  removeChangeListener(callback) {\r\n    this.removeListener(Constants.CHANGE, callback);\r\n  }\r\n}\r\n\r\nexport default new NotificationManager();\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nclass Notification extends React.Component {\r\n  static propTypes = {\r\n    type: PropTypes.oneOf(['info', 'success', 'warning', 'error', \"primary\", \"secondary\"]),\r\n    title: PropTypes.node,\r\n    message: PropTypes.node.isRequired,\r\n    timeOut: PropTypes.number,\r\n    onClick: PropTypes.func,\r\n    onRequestHide: PropTypes.func,\r\n    customClassName: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    type: 'info',\r\n    title: null,\r\n    message: null,\r\n    timeOut: 5000,\r\n    onClick: () => {\r\n    },\r\n    onRequestHide: () => {\r\n    },\r\n    customClassName:\"\"\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const { timeOut } = this.props;\r\n    if (timeOut !== 0) {\r\n      this.timer = setTimeout(this.requestHide, timeOut);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    if (this.timer) {\r\n      clearTimeout(this.timer);\r\n    }\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { onClick } = this.props;\r\n    if (onClick) {\r\n      onClick();\r\n    }\r\n    this.requestHide();\r\n  };\r\n\r\n  requestHide = () => {\r\n    const { onRequestHide } = this.props;\r\n    if (onRequestHide) {\r\n      onRequestHide();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { type, message } = this.props;\r\n    let { title } = this.props;\r\n    const className = classnames(['notification', `notification-${type}`, this.props.customClassName]);\r\n    title = title ? (<h4 className=\"title\">{title}</h4>) : null;\r\n    return (\r\n      <div className={className} onClick={this.handleClick}>\r\n        <div className=\"notification-message\" role=\"alert\">\r\n          {title}\r\n          <div className=\"message\">{message}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport classnames from 'classnames';\r\nimport Notification from './Notification';\r\n\r\nclass Notifications extends React.Component {\r\n  static propTypes = {\r\n    notifications: PropTypes.array.isRequired,\r\n    onRequestHide: PropTypes.func,\r\n    enterTimeout: PropTypes.number,\r\n    leaveTimeout: PropTypes.number\r\n  };\r\n\r\n  static defaultProps = {\r\n    notifications: [],\r\n    onRequestHide: () => {\r\n    },\r\n    enterTimeout: 400,\r\n    leaveTimeout: 400\r\n  };\r\n\r\n  handleRequestHide = notification => () => {\r\n    const { onRequestHide } = this.props;\r\n    if (onRequestHide) {\r\n      onRequestHide(notification);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { notifications, enterTimeout, leaveTimeout } = this.props;\r\n    const className = classnames('notification-container', {\r\n      'notification-container-empty': notifications.length === 0\r\n    });\r\n    return (\r\n      <div className={className}>\r\n        <TransitionGroup>\r\n          {notifications.map((notification) => {\r\n            const key = notification.id || new Date().getTime();\r\n            return (\r\n              <CSSTransition\r\n                classNames=\"notification\"\r\n                key={key}\r\n                timeout={{ exit: leaveTimeout, enter: enterTimeout }}>\r\n              <Notification\r\n                key={key}\r\n                type={notification.type}\r\n                title={notification.title}\r\n                message={notification.message}\r\n                timeOut={notification.timeOut}\r\n                onClick={notification.onClick}\r\n                onRequestHide={this.handleRequestHide(notification)}\r\n                customClassName={notification.customClassName}\r\n              />\r\n              </CSSTransition>\r\n            );\r\n          })}\r\n        </TransitionGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notifications;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NotificationManager from './NotificationManager';\r\nimport Notifications from './Notifications';\r\n\r\nclass NotificationContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    NotificationManager.addChangeListener(this.handleStoreChange);\r\n  }\r\n\r\n  static propTypes = {\r\n    enterTimeout: PropTypes.number,\r\n    leaveTimeout: PropTypes.number\r\n  };\r\n\r\n  static defaultProps = {\r\n    enterTimeout: 400,\r\n    leaveTimeout: 400\r\n  };\r\n\r\n  state = {\r\n    notifications: []\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    NotificationManager.removeChangeListener(this.handleStoreChange);\r\n  };\r\n\r\n  handleStoreChange = (notifications) => {\r\n    this.setState({\r\n      notifications\r\n    });\r\n  };\r\n\r\n  handleRequestHide = (notification) => {\r\n    NotificationManager.remove(notification);\r\n  };\r\n\r\n  render() {\r\n    const { notifications } = this.state;\r\n    const { enterTimeout, leaveTimeout } = this.props;\r\n    return (\r\n      <Notifications\r\n        enterTimeout={enterTimeout}\r\n        leaveTimeout={leaveTimeout}\r\n        notifications={notifications}\r\n        onRequestHide={this.handleRequestHide}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotificationContainer;\r\n","import React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport { IntlProvider } from 'react-intl';\r\nimport AppLocale from './lang';\r\nimport ColorSwitcher from './components/common/ColorSwitcher';\r\nimport NotificationContainer from './components/common/react-notifications/NotificationContainer';\r\nimport { isMultiColorActive } from './constants/defaultValues';\r\nimport { getDirection } from './helpers/Utils';\r\n\r\nconst ViewMain = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views\" */ './views')\r\n);\r\nconst ViewApp = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ './views/app')\r\n);\r\nconst ViewError = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-error\" */ './views/error')\r\n);\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const direction = getDirection();\r\n    if (direction.isRtl) {\r\n      document.body.classList.add('rtl');\r\n      document.body.classList.remove('ltr');\r\n    } else {\r\n      document.body.classList.add('ltr');\r\n      document.body.classList.remove('rtl');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { locale } = this.props;\r\n    const currentAppLocale = AppLocale[locale];\r\n\r\n    return (\r\n      <div className=\"h-100\">\r\n        <IntlProvider\r\n          locale={currentAppLocale.locale}\r\n          messages={currentAppLocale.messages}\r\n        >\r\n          <React.Fragment>\r\n            <NotificationContainer />\r\n            {isMultiColorActive && <ColorSwitcher />}\r\n            <Suspense fallback={<div className=\"loading\" />}>\r\n              <Router>\r\n                <Switch>\r\n                  <Route\r\n                    path=\"/app\"\r\n                    render={props => <ViewApp {...props} />}\r\n                  />\r\n                  <Route\r\n                    path=\"/error\"\r\n                    exact\r\n                    render={props => <ViewError {...props} />}\r\n                  />\r\n                  <Route\r\n                    path=\"/\"\r\n                    exact\r\n                    render={props => <ViewMain {...props} />}\r\n                  />\r\n                  <Redirect to=\"/error\" />\r\n                </Switch>\r\n              </Router>\r\n            </Suspense>\r\n          </React.Fragment>\r\n        </IntlProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ settings }) => {\r\n  const { locale } = settings;\r\n  return { locale };\r\n};\r\nconst mapActionsToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(App);\r\n","/* Gogo Language Texts\r\n\r\nTable of Contents\r\n\r\n01.General\r\n02.User Login, Logout, Register\r\n03.Menu\r\n04.Error Page\r\n*/\r\n\r\n\r\nmodule.exports = {\r\n  /* 01.General */\r\n  \"general.copyright\": \"Gogo React © 2018 All Rights Reserved.\",\r\n\r\n  /* 02.User Login, Logout, Register */\r\n  \"user.login-title\": \"Login\",\r\n  \"user.register\": \"Register\",\r\n  \"user.forgot-password\": \"Forgot Password\",\r\n  \"user.email\": \"E-mail\",\r\n  \"user.password\": \"Password\",\r\n  \"user.forgot-password-question\": \"Forget password?\",\r\n  \"user.fullname\": \"Full Name\",\r\n  \"user.login-button\": \"LOGIN\",\r\n  \"user.register-button\": \"REGISTER\",\r\n  \"user.reset-password-button\": \"RESET\",\r\n  \"user.buy\": \"BUY\",\r\n  \"user.username\": \"Username\",\r\n\r\n  /* 03.Menu */\r\n  \"menu.app\": \"Home\",\r\n  \"menu.dashboards\": \"Dashboards\",\r\n  \"menu.gogo\": \"Gogo\",\r\n  \"menu.start\": \"Start\",\r\n  \"menu.second-menu\": \"Second Menu\",\r\n  \"menu.second\": \"Second\",\r\n  \"menu.ui\": \"UI\",\r\n  \"menu.charts\": \"Charts\",\r\n  \"menu.chat\": \"Chat\",\r\n  \"menu.survey\": \"Survey\",\r\n  \"menu.todo\": \"Todo\",\r\n  \"menu.search\" :\"Search\",\r\n  \"menu.docs\": \"Docs\",\r\n  \"menu.blank-page\": \"Blank Page\",\r\n\r\n /* 04.Error Page */\r\n \"pages.error-title\": \"Ooops... looks like an error occurred!\",\r\n \"pages.error-code\": \"Error code\",\r\n \"pages.go-back-home\": \"GO BACK HOME\",\r\n};\r\n","import { defaultDirection } from \"../constants/defaultValues\";\r\n\r\nexport const mapOrder = (array, order, key) => {\r\n  array.sort(function (a, b) {\r\n    var A = a[key], B = b[key];\r\n    if (order.indexOf(A + \"\") > order.indexOf(B + \"\")) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  });\r\n  return array;\r\n};\r\n\r\n\r\nexport const getDateWithFormat = () => {\r\n  const today = new Date();\r\n  let dd = today.getDate();\r\n  let mm = today.getMonth() + 1; //January is 0!\r\n\r\n  var yyyy = today.getFullYear();\r\n  if (dd < 10) {\r\n    dd = '0' + dd;\r\n  }\r\n  if (mm < 10) {\r\n    mm = '0' + mm;\r\n  }\r\n  return dd + '.' + mm + '.' + yyyy;\r\n}\r\n\r\nexport const getCurrentTime=()=>{\r\n  const now = new Date();\r\n  return now.getHours() + \":\" + now.getMinutes()\r\n}\r\n\r\n\r\nexport const getDirection = () => {\r\n  let direction = defaultDirection;\r\n  if (localStorage.getItem(\"direction\")) {\r\n    const localValue = localStorage.getItem(\"direction\");\r\n    if (localValue === \"rtl\" || localValue === \"ltr\") {\r\n      direction = localValue;\r\n    }\r\n  }\r\n  return {\r\n    direction,\r\n    isRtl: direction === \"rtl\"\r\n  };\r\n};\r\n\r\nexport const setDirection = localValue => {\r\n  let direction = \"ltr\";\r\n  if (localValue === \"rtl\" || localValue === \"ltr\") {\r\n    direction = localValue;\r\n  }\r\n  localStorage.setItem(\"direction\", direction);\r\n};\r\n\r\n"],"sourceRoot":""}