{"version":3,"sources":["components/svg/MenuIcon.js","components/svg/MobileMenuIcon.js","containers/navs/Topnav.EasyAccess.js","data/notifications.js","containers/navs/Topnav.Notifications.js","containers/navs/Topnav.DarkSwitch.js","containers/navs/Topnav.js","constants/menu.js","containers/navs/Sidebar.js","layout/AppLayout.js","views/app/index.js","helpers/IntlMessages.js"],"names":["MenuIcon","className","xmlns","viewBox","x","y","width","height","MobileMenuIcon","TopnavEasyAccess","UncontrolledDropdown","DropdownToggle","color","DropdownMenu","right","id","to","IntlMessages","data","img","title","date","NotificationItem","href","src","alt","TopnavNotifications","options","suppressScrollX","wheelPropagation","notifications","map","notification","index","key","TopnavDarkSwitch","props","toggle","setState","prevState","tooltipOpen","getColor","localStorage","getItem","themeColorStorageKey","defaultColor","changeMode","indexOf","replace","switchChecked","setItem","setTimeout","window","location","reload","state","this","checked","onChange","Tooltip","placement","isOpen","target","Component","TopNav","handleChangeLocale","locale","direction","changeLocale","getDirection","setDirection","isInFullScreen","document","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","handleSearchIconClick","e","innerWidth","menuHiddenBreakpoint","elem","classList","contains","parentElement","search","remove","removeEventsSearch","add","addEventsSearch","addEventListener","handleDocumentClickSearch","removeEventListener","isSearchClick","input","querySelector","searchKeyword","handleSearchInputChange","value","handleSearchInputKeyPress","history","push","searchPath","toggleFullScreen","docElm","documentElement","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","handleLogout","menuButtonClick","menuClickCount","containerClassnames","preventDefault","event","createEvent","initEvent","dispatchEvent","setContainerClassnames","selectedMenuHasSubItems","mobileMenuButtonClick","clickOnMobileMenu","messages","intl","onClick","data-search-path","Input","name","placeholder","onKeyPress","caret","size","toUpperCase","localeOptions","l","DropdownItem","isDarkSwitchActive","type","divider","injectIntl","connect","menu","settings","icon","label","subs","newWindow","Sidebar","handleWindowResize","isTrusted","nextClasses","getMenuClassesForResize","join","handleDocumentClick","container","getContainer","isMenuClick","viewingParentMenu","classes","subHiddenBreakpoint","split","filter","windowWidth","includes","ReactDOM","findDOMNode","hasSubItems","getIsHasSubItem","changeSelectedMenuHasSubItems","currentClasses","clickIndex","handleProps","addEvents","forEach","removeEvents","setSelectedLiActive","callback","oldli","oldliSub","selectedSublink","selectedlink","selectedParentMenu","getAttribute","selectedParentNoSubItem","menuItems","setHasSubItemStatus","hasSubmenu","menuItem","find","length","openSubMenu","selectedParent","hasSubMenu","addContainerClassname","toggleMenuCollapse","menuKey","collapsedMenus","prevProps","pathname","scrollTo","Nav","vertical","item","NavItem","classnames","active","rel","data-flag","data-parent","sub","Collapse","thirdSub","thirdIndex","withRouter","changeDefaultClassnames","AppLayout","children","Gogo","React","lazy","SecondMenu","BlankPage","App","match","fallback","exact","from","url","path","render","withRef"],"mappings":"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","file":"static/js/views-app.cfa415ea.chunk.js","sourcesContent":["import React, {Fragment} from \"react\";\r\nconst MenuIcon = () => {\r\n  return (\r\n    <Fragment>\r\n      <svg className=\"main\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 9 17\">\r\n        <rect x=\"0.48\" y=\"0.5\" width=\"7\" height=\"1\" />\r\n        <rect x=\"0.48\" y=\"7.5\" width=\"7\" height=\"1\" />\r\n        <rect x=\"0.48\" y=\"15.5\" width=\"7\" height=\"1\" />\r\n      </svg>\r\n      <svg className=\"sub\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 17\">\r\n        <rect x=\"1.56\" y=\"0.5\" width=\"16\" height=\"1\" />\r\n        <rect x=\"1.56\" y=\"7.5\" width=\"16\" height=\"1\" />\r\n        <rect x=\"1.56\" y=\"15.5\" width=\"16\" height=\"1\" />\r\n      </svg>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MenuIcon;\r\n","import React from \"react\";\r\n\r\nconst MobileMenuIcon = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 26 17\">\r\n      <rect x=\"0.5\" y=\"0.5\" width=\"25\" height=\"1\" />\r\n      <rect x=\"0.5\" y=\"7.5\" width=\"25\" height=\"1\" />\r\n      <rect x=\"0.5\" y=\"15.5\" width=\"25\" height=\"1\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default MobileMenuIcon;\r\n","import React from \"react\";\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst TopnavEasyAccess = () => {\r\n  return (\r\n    <div className=\"position-relative d-none d-sm-inline-block\">\r\n      <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n        <DropdownToggle className=\"header-icon\" color=\"empty\">\r\n          <i className=\"simple-icon-grid\" />\r\n        </DropdownToggle>\r\n        <DropdownMenu\r\n          className=\"position-absolute mt-3\"\r\n          right\r\n          id=\"iconMenuDropdown\"\r\n        >\r\n          <NavLink to=\"/app/dashboards/default\" className=\"icon-menu-item\">\r\n            <i className=\"iconsminds-shop-4 d-block\" />{\" \"}\r\n            <IntlMessages id=\"menu.dashboards\" />\r\n          </NavLink>\r\n\r\n          <NavLink to=\"/app/ui\" className=\"icon-menu-item\">\r\n            <i className=\"iconsminds-pantone d-block\" />{\" \"}\r\n            <IntlMessages id=\"menu.ui\" />\r\n          </NavLink>\r\n          <NavLink to=\"/app/ui/charts\" className=\"icon-menu-item\">\r\n            <i className=\"iconsminds-bar-chart-4 d-block\" />{\" \"}\r\n            <IntlMessages id=\"menu.charts\" />\r\n          </NavLink>\r\n          <NavLink to=\"/app/applications/chat\" className=\"icon-menu-item\">\r\n            <i className=\"iconsminds-speach-bubble d-block\" />{\" \"}\r\n            <IntlMessages id=\"menu.chat\" />\r\n          </NavLink>\r\n          <NavLink to=\"/app/applications/survey\" className=\"icon-menu-item\">\r\n            <i className=\"iconsminds-formula d-block\" />{\" \"}\r\n            <IntlMessages id=\"menu.survey\" />\r\n          </NavLink>\r\n          <NavLink to=\"/app/applications/todo\" className=\"icon-menu-item\">\r\n            <i className=\"iconsminds-check d-block\" />{\" \"}\r\n            <IntlMessages id=\"menu.todo\" />\r\n          </NavLink>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopnavEasyAccess;\r\n","const data = [\r\n  {\r\n    img: '/assets/img/profile-pic-l-2.jpg',\r\n    title: 'Joisse Kaycee just sent a new comment!',\r\n    date: '09.04.2018 - 12:45',\r\n    id: 1\r\n  },\r\n  {\r\n    img: '/assets/img/notification-thumb.jpg',\r\n    title: '1 item is out of stock!',\r\n    date: '09.04.2018 - 12:45',\r\n    id: 2\r\n  },\r\n  {\r\n    img: '/assets/img/notification-thumb-2.jpg',\r\n    title: 'New order received! It is total $147,20.',\r\n    date: '09.04.2018 - 12:45',\r\n    id: 3\r\n  },\r\n  {\r\n    img: '/assets/img/notification-thumb-3.jpg',\r\n    title: '3 items just added to wish list by a user!',\r\n    date: '09.04.2018 - 12:45',\r\n    id: 4\r\n  }\r\n]\r\nexport default data\r\n","import React from \"react\";\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu } from \"reactstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nimport notifications from \"../../data/notifications\";\r\n\r\nconst NotificationItem = ({ img, title, date }) => {\r\n  return (\r\n    <div className=\"d-flex flex-row mb-3 pb-3 border-bottom\">\r\n      <a href=\"/app/pages/details\">\r\n        <img\r\n          src={img}\r\n          alt={title}\r\n          className=\"img-thumbnail list-thumbnail xsmall border-0 rounded-circle\"\r\n        />\r\n      </a>\r\n      <div className=\"pl-3 pr-2\">\r\n        <a href=\"/app/pages/details\">\r\n          <p className=\"font-weight-medium mb-1\">{title}</p>\r\n          <p className=\"text-muted mb-0 text-small\">{date}</p>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TopnavNotifications = () => {\r\n  return (\r\n    <div className=\"position-relative d-inline-block\">\r\n      <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n        <DropdownToggle\r\n          className=\"header-icon notificationButton\"\r\n          color=\"empty\"\r\n        >\r\n          <i className=\"simple-icon-bell\" />\r\n          <span className=\"count\">3</span>\r\n        </DropdownToggle>\r\n        <DropdownMenu\r\n          className=\"position-absolute mt-3 scroll\"\r\n          right\r\n          id=\"notificationDropdown\"\r\n        >\r\n          <PerfectScrollbar\r\n            options={{ suppressScrollX: true, wheelPropagation: false }}\r\n          >\r\n            {notifications.map((notification, index) => {\r\n              return <NotificationItem key={index} {...notification} />;\r\n            })}\r\n          </PerfectScrollbar>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopnavNotifications;\r\n","import React, { Component } from \"react\";\r\nimport Switch from \"rc-switch\";\r\nimport \"rc-switch/assets/index.css\";\r\nimport { Tooltip } from \"reactstrap\";\r\n\r\nimport { defaultColor,themeColorStorageKey } from \"../../constants/defaultValues\";\r\n\r\nexport default class TopnavDarkSwitch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      switchChecked: false,\r\n      tooltipOpen: false\r\n    };\r\n  }\r\n  componentDidMount(){\r\n      const color = this.getColor();\r\n          this.setState({\r\n            switchChecked:color.indexOf('dark')>-1\r\n          })\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      tooltipOpen: !prevState.tooltipOpen\r\n    }));\r\n  };\r\n\r\n  getColor = () => {\r\n    return localStorage.getItem(themeColorStorageKey)\r\n      ? localStorage.getItem(themeColorStorageKey)\r\n      : defaultColor;\r\n  };\r\n  changeMode = () => {\r\n    let color = this.getColor();\r\n\r\n    if(color.indexOf('dark')>-1){\r\n        color= color.replace('dark','light')\r\n    }else if(color.indexOf('light')>-1){\r\n        color= color.replace('light','dark')\r\n    }\r\n\r\n    this.setState({\r\n        switchChecked:color.indexOf('dark')>-1\r\n      },()=>{\r\n          localStorage.setItem(themeColorStorageKey,color)\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n          }, 500);\r\n      })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"d-none d-md-inline-block align-middle mr-3\">\r\n        <Switch\r\n          id=\"Tooltip-Switch\"\r\n          className=\"custom-switch custom-switch-primary custom-switch-small\"\r\n          checked={this.state.switchChecked}\r\n          onChange={this.changeMode}\r\n        />\r\n\r\n        <Tooltip\r\n          placement=\"left\"\r\n          isOpen={this.state.tooltipOpen}\r\n          target={\"Tooltip-Switch\"}\r\n          toggle={this.toggle}\r\n        >\r\n          Dark Mode\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Input\r\n} from \"reactstrap\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport {\r\n  setContainerClassnames,\r\n  clickOnMobileMenu,\r\n  changeLocale\r\n} from \"../../redux/actions\";\r\n\r\nimport {\r\n  menuHiddenBreakpoint,\r\n  searchPath,\r\n  localeOptions,\r\n  isDarkSwitchActive,\r\n} from \"../../constants/defaultValues\";\r\n\r\nimport { MobileMenuIcon, MenuIcon } from \"../../components/svg\";\r\nimport TopnavEasyAccess from \"./Topnav.EasyAccess\";\r\nimport TopnavNotifications from \"./Topnav.Notifications\";\r\nimport TopnavDarkSwitch from \"./Topnav.DarkSwitch\";\r\n\r\nimport { getDirection, setDirection } from \"../../helpers/Utils\";\r\n\r\nclass TopNav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isInFullScreen: false,\r\n      searchKeyword: \"\"\r\n    };\r\n  }\r\n\r\n  handleChangeLocale = (locale, direction) => {\r\n    this.props.changeLocale(locale);\r\n\r\n    const currentDirection = getDirection().direction;\r\n    if (direction !== currentDirection) {\r\n      setDirection(direction);\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  isInFullScreen = () => {\r\n    return (\r\n      (document.fullscreenElement && document.fullscreenElement !== null) ||\r\n      (document.webkitFullscreenElement &&\r\n        document.webkitFullscreenElement !== null) ||\r\n      (document.mozFullScreenElement &&\r\n        document.mozFullScreenElement !== null) ||\r\n      (document.msFullscreenElement && document.msFullscreenElement !== null)\r\n    );\r\n  };\r\n  handleSearchIconClick = e => {\r\n    if (window.innerWidth < menuHiddenBreakpoint) {\r\n      let elem = e.target;\r\n      if (!e.target.classList.contains(\"search\")) {\r\n        if (e.target.parentElement.classList.contains(\"search\")) {\r\n          elem = e.target.parentElement;\r\n        } else if (\r\n          e.target.parentElement.parentElement.classList.contains(\"search\")\r\n        ) {\r\n          elem = e.target.parentElement.parentElement;\r\n        }\r\n      }\r\n\r\n      if (elem.classList.contains(\"mobile-view\")) {\r\n        this.search();\r\n        elem.classList.remove(\"mobile-view\");\r\n        this.removeEventsSearch();\r\n      } else {\r\n        elem.classList.add(\"mobile-view\");\r\n        this.addEventsSearch();\r\n      }\r\n    } else {\r\n      this.search();\r\n    }\r\n  };\r\n  addEventsSearch = () => {\r\n    document.addEventListener(\"click\", this.handleDocumentClickSearch, true);\r\n  };\r\n  removeEventsSearch = () => {\r\n    document.removeEventListener(\"click\", this.handleDocumentClickSearch, true);\r\n  };\r\n\r\n  handleDocumentClickSearch = e => {\r\n    let isSearchClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains(\"navbar\") ||\r\n        e.target.classList.contains(\"simple-icon-magnifier\"))\r\n    ) {\r\n      isSearchClick = true;\r\n      if (e.target.classList.contains(\"simple-icon-magnifier\")) {\r\n        this.search();\r\n      }\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      e.target.parentElement.classList.contains(\"search\")\r\n    ) {\r\n      isSearchClick = true;\r\n    }\r\n\r\n    if (!isSearchClick) {\r\n      const input = document.querySelector(\".mobile-view\");\r\n      if (input && input.classList) input.classList.remove(\"mobile-view\");\r\n      this.removeEventsSearch();\r\n      this.setState({\r\n        searchKeyword: \"\"\r\n      });\r\n    }\r\n  };\r\n  handleSearchInputChange = e => {\r\n    this.setState({\r\n      searchKeyword: e.target.value\r\n    });\r\n  };\r\n  handleSearchInputKeyPress = e => {\r\n    if (e.key === \"Enter\") {\r\n      this.search();\r\n    }\r\n  };\r\n\r\n  search = () => {\r\n    this.props.history.push(searchPath + \"/\" + this.state.searchKeyword);\r\n    this.setState({\r\n      searchKeyword: \"\"\r\n    });\r\n  };\r\n\r\n  toggleFullScreen = () => {\r\n    const isInFullScreen = this.isInFullScreen();\r\n\r\n    var docElm = document.documentElement;\r\n    if (!isInFullScreen) {\r\n      if (docElm.requestFullscreen) {\r\n        docElm.requestFullscreen();\r\n      } else if (docElm.mozRequestFullScreen) {\r\n        docElm.mozRequestFullScreen();\r\n      } else if (docElm.webkitRequestFullScreen) {\r\n        docElm.webkitRequestFullScreen();\r\n      } else if (docElm.msRequestFullscreen) {\r\n        docElm.msRequestFullscreen();\r\n      }\r\n    } else {\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n      } else if (document.webkitExitFullscreen) {\r\n        document.webkitExitFullscreen();\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen();\r\n      } else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen();\r\n      }\r\n    }\r\n    this.setState({\r\n      isInFullScreen: !isInFullScreen\r\n    });\r\n  };\r\n\r\n  handleLogout = () => {\r\n    //logout\r\n  };\r\n\r\n  menuButtonClick = (e, menuClickCount, containerClassnames) => {\r\n    e.preventDefault();\r\n\r\n    setTimeout(() => {\r\n      var event = document.createEvent(\"HTMLEvents\");\r\n      event.initEvent(\"resize\", false, false);\r\n      window.dispatchEvent(event);\r\n    }, 350);\r\n    this.props.setContainerClassnames(\r\n      ++menuClickCount,\r\n      containerClassnames,\r\n      this.props.selectedMenuHasSubItems\r\n    );\r\n  };\r\n  mobileMenuButtonClick = (e, containerClassnames) => {\r\n    e.preventDefault();\r\n    this.props.clickOnMobileMenu(containerClassnames);\r\n  };\r\n\r\n  render() {\r\n    const { containerClassnames, menuClickCount, locale } = this.props;\r\n    const { messages } = this.props.intl;\r\n    return (\r\n      <nav className=\"navbar fixed-top\">\r\n        <div className=\"d-flex align-items-center navbar-left\">\r\n          <NavLink\r\n            to=\"#\"\r\n            className=\"menu-button d-none d-md-block\"\r\n            onClick={e =>\r\n              this.menuButtonClick(e, menuClickCount, containerClassnames)\r\n            }\r\n          >\r\n            <MenuIcon />\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"#\"\r\n            className=\"menu-button-mobile d-xs-block d-sm-block d-md-none\"\r\n            onClick={e => this.mobileMenuButtonClick(e, containerClassnames)}\r\n          >\r\n            <MobileMenuIcon />\r\n          </NavLink>\r\n\r\n          <div className=\"search\" data-search-path=\"/app/pages/search\">\r\n            <Input\r\n              name=\"searchKeyword\"\r\n              id=\"searchKeyword\"\r\n              placeholder={messages[\"menu.search\"]}\r\n              value={this.state.searchKeyword}\r\n              onChange={e => this.handleSearchInputChange(e)}\r\n              onKeyPress={e => this.handleSearchInputKeyPress(e)}\r\n            />\r\n            <span\r\n              className=\"search-icon\"\r\n              onClick={e => this.handleSearchIconClick(e)}\r\n            >\r\n              <i className=\"simple-icon-magnifier\" />\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"d-inline-block\">\r\n            <UncontrolledDropdown className=\"ml-2\">\r\n              <DropdownToggle\r\n                caret\r\n                color=\"light\"\r\n                size=\"sm\"\r\n                className=\"language-button\"\r\n              >\r\n                <span className=\"name\">{locale.toUpperCase()}</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"mt-3\" right>\r\n                {localeOptions.map(l => {\r\n                  return (\r\n                    <DropdownItem\r\n                      onClick={() => this.handleChangeLocale(l.id, l.direction)}\r\n                      key={l.id}\r\n                    >\r\n                      {l.name}\r\n                    </DropdownItem>\r\n                  );\r\n                })}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n          <div className=\"position-relative d-none d-none d-lg-inline-block\">\r\n            <a\r\n              className=\"btn btn-outline-primary btn-sm ml-2\"\r\n              target=\"_top\"\r\n              href=\"https://themeforest.net/cart/configure_before_adding/22544383?license=regular&ref=ColoredStrategies&size=source\"\r\n            >\r\n              <IntlMessages id=\"user.buy\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <a className=\"navbar-logo\" href=\"/\">\r\n          <span className=\"logo d-none d-xs-block\" />\r\n          <span className=\"logo-mobile d-block d-xs-none\" />\r\n        </a>\r\n        <div className=\"navbar-right\">\r\n          {isDarkSwitchActive && <TopnavDarkSwitch />}\r\n\r\n          <div className=\"header-icons d-inline-block align-middle\">\r\n\r\n            <TopnavEasyAccess />\r\n            <TopnavNotifications />\r\n            <button\r\n              className=\"header-icon btn btn-empty d-none d-sm-inline-block\"\r\n              type=\"button\"\r\n              id=\"fullScreenButton\"\r\n              onClick={this.toggleFullScreen}\r\n            >\r\n              {this.state.isInFullScreen ? (\r\n                <i className=\"simple-icon-size-actual d-block\" />\r\n              ) : (\r\n                  <i className=\"simple-icon-size-fullscreen d-block\" />\r\n                )}\r\n            </button>\r\n          </div>\r\n          <div className=\"user d-inline-block\">\r\n            <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n              <DropdownToggle className=\"p-0\" color=\"empty\">\r\n                <span className=\"name mr-1\">Sarah Kortney</span>\r\n                <span>\r\n                  <img alt=\"Profile\" src=\"/assets/img/profile-pic-l.jpg\" />\r\n                </span>\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"mt-3\" right>\r\n                <DropdownItem>Account</DropdownItem>\r\n                <DropdownItem>Features</DropdownItem>\r\n                <DropdownItem>History</DropdownItem>\r\n                <DropdownItem>Support</DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem onClick={() => this.handleLogout()}>\r\n                  Sign out\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ menu, settings }) => {\r\n  const { containerClassnames, menuClickCount, selectedMenuHasSubItems } = menu;\r\n  const { locale } = settings;\r\n  return {\r\n    containerClassnames,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    locale\r\n  };\r\n};\r\nexport default injectIntl(\r\n  connect(\r\n    mapStateToProps,\r\n    { setContainerClassnames, clickOnMobileMenu, changeLocale }\r\n  )(TopNav)\r\n);\r\n","const data = [\r\n  {\r\n    id: \"gogo\",\r\n    icon: \"iconsminds-air-balloon-1\",\r\n    label: \"menu.gogo\",\r\n    to: \"/app/gogo\",\r\n    subs: [\r\n      {\r\n        icon: \"simple-icon-paper-plane\",\r\n        label: \"menu.start\",\r\n        to: \"/app/gogo/start\"\r\n      }     \r\n    ]\r\n  },\r\n  {\r\n    id: \"secondmenu\",\r\n    icon: \"iconsminds-three-arrow-fork\",\r\n    label: \"menu.second-menu\",\r\n    to: \"/app/second-menu\",\r\n    subs: [\r\n      {\r\n        icon: \"simple-icon-paper-plane\",\r\n        label: \"menu.second\",\r\n        to: \"/app/second-menu/second\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: \"blankpage\",\r\n    icon: \"iconsminds-bucket\",\r\n    label: \"menu.blank-page\",\r\n    to: \"/app/blank-page\"\r\n  },\r\n  {\r\n    id: \"docs\",\r\n    icon: \"iconsminds-library\",\r\n    label: \"menu.docs\",\r\n    to: \"https://gogo-react-docs.coloredstrategies.com/\",\r\n    newWindow:true\r\n  }\r\n];\r\nexport default data;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport { Nav, NavItem, Collapse } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nimport {\r\n  setContainerClassnames,\r\n  addContainerClassname,\r\n  changeDefaultClassnames,\r\n  changeSelectedMenuHasSubItems\r\n} from '../../redux/actions';\r\n\r\nimport menuItems from '../../constants/menu';\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedParentMenu: '',\r\n      viewingParentMenu: '',\r\n      collapsedMenus: []\r\n    };\r\n  }\r\n\r\n  handleWindowResize = event => {\r\n    if (event && !event.isTrusted) {\r\n      return;\r\n    }\r\n    const { containerClassnames } = this.props;\r\n    let nextClasses = this.getMenuClassesForResize(containerClassnames);\r\n    this.props.setContainerClassnames(\r\n      0,\r\n      nextClasses.join(' '),\r\n      this.props.selectedMenuHasSubItems\r\n    );\r\n  };\r\n\r\n  handleDocumentClick = e => {\r\n    const container = this.getContainer();\r\n    let isMenuClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains('menu-button') ||\r\n        e.target.classList.contains('menu-button-mobile'))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      (e.target.parentElement.classList.contains('menu-button') ||\r\n        e.target.parentElement.classList.contains('menu-button-mobile'))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.parentElement &&\r\n      e.target.parentElement.parentElement.classList &&\r\n      (e.target.parentElement.parentElement.classList.contains('menu-button') ||\r\n        e.target.parentElement.parentElement.classList.contains(\r\n          'menu-button-mobile'\r\n        ))\r\n    ) {\r\n      isMenuClick = true;\r\n    }\r\n    if (container.contains(e.target) || container === e.target || isMenuClick) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      viewingParentMenu: ''\r\n    });\r\n    this.toggle();\r\n  };\r\n\r\n  getMenuClassesForResize = classes => {\r\n    const { menuHiddenBreakpoint, subHiddenBreakpoint } = this.props;\r\n    let nextClasses = classes.split(' ').filter(x => x !== '');\r\n    const windowWidth = window.innerWidth;\r\n    if (windowWidth < menuHiddenBreakpoint) {\r\n      nextClasses.push('menu-mobile');\r\n    } else if (windowWidth < subHiddenBreakpoint) {\r\n      nextClasses = nextClasses.filter(x => x !== 'menu-mobile');\r\n      if (\r\n        nextClasses.includes('menu-default') &&\r\n        !nextClasses.includes('menu-sub-hidden')\r\n      ) {\r\n        nextClasses.push('menu-sub-hidden');\r\n      }\r\n    } else {\r\n      nextClasses = nextClasses.filter(x => x !== 'menu-mobile');\r\n      if (\r\n        nextClasses.includes('menu-default') &&\r\n        nextClasses.includes('menu-sub-hidden')\r\n      ) {\r\n        nextClasses = nextClasses.filter(x => x !== 'menu-sub-hidden');\r\n      }\r\n    }\r\n    return nextClasses;\r\n  };\r\n\r\n  getContainer = () => {\r\n    return ReactDOM.findDOMNode(this);\r\n  };\r\n\r\n  toggle = () => {\r\n    const hasSubItems = this.getIsHasSubItem();\r\n    this.props.changeSelectedMenuHasSubItems(hasSubItems);\r\n    const { containerClassnames, menuClickCount } = this.props;\r\n    const currentClasses = containerClassnames\r\n      ? containerClassnames.split(' ').filter(x => x !== '')\r\n      : '';\r\n    let clickIndex = -1;\r\n\r\n    if (!hasSubItems) {\r\n      if (\r\n        currentClasses.includes('menu-default') &&\r\n        (menuClickCount % 4 === 0 || menuClickCount % 4 === 3)\r\n      ) {\r\n        clickIndex = 1;\r\n      } else if (\r\n        currentClasses.includes('menu-sub-hidden') &&\r\n        (menuClickCount === 2 || menuClickCount === 3)\r\n      ) {\r\n        clickIndex = 0;\r\n      } else if (\r\n        currentClasses.includes('menu-hidden') ||\r\n        currentClasses.includes('menu-mobile')\r\n      ) {\r\n        clickIndex = 0;\r\n      }\r\n    } else {\r\n      if (currentClasses.includes('menu-sub-hidden') && menuClickCount === 3) {\r\n        clickIndex = 2;\r\n      } else if (\r\n        currentClasses.includes('menu-hidden') ||\r\n        currentClasses.includes('menu-mobile')\r\n      ) {\r\n        clickIndex = 0;\r\n      }\r\n    }\r\n    if (clickIndex >= 0) {\r\n      this.props.setContainerClassnames(\r\n        clickIndex,\r\n        containerClassnames,\r\n        hasSubItems\r\n      );\r\n    }\r\n  };\r\n\r\n  handleProps = () => {\r\n    this.addEvents();\r\n  };\r\n\r\n  addEvents = () => {\r\n    ['click', 'touchstart', 'touchend'].forEach(event =>\r\n      document.addEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  removeEvents = () => {\r\n    ['click', 'touchstart', 'touchend'].forEach(event =>\r\n      document.removeEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  setSelectedLiActive = callback => {\r\n    const oldli = document.querySelector('.sub-menu  li.active');\r\n    if (oldli != null) {\r\n      oldli.classList.remove('active');\r\n    }\r\n\r\n    const oldliSub = document.querySelector('.third-level-menu  li.active');\r\n    if (oldliSub != null) {\r\n      oldliSub.classList.remove('active');\r\n    }\r\n\r\n    /* set selected parent menu */\r\n    const selectedSublink = document.querySelector('.third-level-menu  a.active');\r\n    if (selectedSublink != null) {\r\n      selectedSublink.parentElement.classList.add('active');\r\n    }\r\n\r\n    const selectedlink = document.querySelector('.sub-menu  a.active');\r\n    if (selectedlink != null) {\r\n      selectedlink.parentElement.classList.add('active');\r\n      this.setState(\r\n        {\r\n          selectedParentMenu: selectedlink.parentElement.parentElement.getAttribute(\r\n            'data-parent'\r\n          )\r\n        },\r\n        callback\r\n      );\r\n    } else {\r\n      var selectedParentNoSubItem = document.querySelector(\r\n        '.main-menu  li a.active'\r\n      );\r\n      if (selectedParentNoSubItem != null) {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu: selectedParentNoSubItem.getAttribute(\r\n              'data-flag'\r\n            )\r\n          },\r\n          callback\r\n        );\r\n      } else if (this.state.selectedParentMenu === '') {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu: menuItems[0].id\r\n          },\r\n          callback\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  setHasSubItemStatus = () => {\r\n    const hasSubmenu = this.getIsHasSubItem();\r\n    this.props.changeSelectedMenuHasSubItems(hasSubmenu);\r\n    this.toggle();\r\n  };\r\n\r\n  getIsHasSubItem = () => {\r\n    const { selectedParentMenu } = this.state;\r\n    const menuItem = menuItems.find(x => x.id === selectedParentMenu);\r\n    if (menuItem)\r\n      return menuItem && menuItem.subs && menuItem.subs.length > 0\r\n        ? true\r\n        : false;\r\n    else return false;\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      this.setSelectedLiActive(this.setHasSubItemStatus);\r\n\r\n      window.scrollTo(0, 0);\r\n    }\r\n    this.handleProps();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.handleWindowResize);\r\n    this.handleWindowResize();\r\n    this.handleProps();\r\n    this.setSelectedLiActive(this.setHasSubItemStatus);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeEvents();\r\n    window.removeEventListener('resize', this.handleWindowResize);\r\n  }\r\n\r\n  openSubMenu = (e, menuItem) => {\r\n    const selectedParent = menuItem.id;\r\n    const hasSubMenu = menuItem.subs && menuItem.subs.length > 0;\r\n    this.props.changeSelectedMenuHasSubItems(hasSubMenu);\r\n    if (!hasSubMenu) {\r\n      this.setState({\r\n        viewingParentMenu: selectedParent,\r\n        selectedParentMenu: selectedParent\r\n      });\r\n      this.toggle();\r\n    } else {\r\n      e.preventDefault();\r\n\r\n      const { containerClassnames, menuClickCount } = this.props;\r\n      const currentClasses = containerClassnames\r\n        ? containerClassnames.split(' ').filter(x => x !== '')\r\n        : '';\r\n\r\n      if (!currentClasses.includes('menu-mobile')) {\r\n        if (\r\n          currentClasses.includes('menu-sub-hidden') &&\r\n          (menuClickCount === 2 || menuClickCount === 0)\r\n        ) {\r\n          this.props.setContainerClassnames(3, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes('menu-hidden') &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          this.props.setContainerClassnames(2, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes('menu-default') &&\r\n          !currentClasses.includes('menu-sub-hidden') &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          this.props.setContainerClassnames(0, containerClassnames, hasSubMenu);\r\n        }\r\n      } else {\r\n        this.props.addContainerClassname(\r\n          'sub-show-temporary',\r\n          containerClassnames\r\n        );\r\n      }\r\n      this.setState({\r\n        viewingParentMenu: selectedParent\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleMenuCollapse = (e, menuKey) => {\r\n    e.preventDefault();\r\n\r\n    let collapsedMenus = this.state.collapsedMenus;\r\n    if (collapsedMenus.indexOf(menuKey) > -1) {\r\n      this.setState({\r\n        collapsedMenus: collapsedMenus.filter(x => x !== menuKey)\r\n      });\r\n    } else {\r\n      collapsedMenus.push(menuKey);\r\n      this.setState({\r\n        collapsedMenus\r\n      });\r\n    }\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedParentMenu,\r\n      viewingParentMenu,\r\n      collapsedMenus\r\n    } = this.state;\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"main-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              <Nav vertical className=\"list-unstyled\">\r\n                {menuItems &&\r\n                  menuItems.map(item => {\r\n                    return (\r\n                      <NavItem\r\n                        key={item.id}\r\n                        className={classnames({\r\n                          active:\r\n                            (selectedParentMenu === item.id &&\r\n                              viewingParentMenu === '') ||\r\n                            viewingParentMenu === item.id\r\n                        })}\r\n                      >\r\n                        {item.newWindow ? (\r\n                          <a\r\n                            href={item.to}\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i className={item.icon} />{' '}\r\n                            <IntlMessages id={item.label} />\r\n                          </a>\r\n                        ) : (\r\n                          <NavLink\r\n                            to={item.to}\r\n                            onClick={e => this.openSubMenu(e, item)}\r\n                            data-flag={item.id}\r\n                          >\r\n                            <i className={item.icon} />{' '}\r\n                            <IntlMessages id={item.label} />\r\n                          </NavLink>\r\n                        )}\r\n                      </NavItem>\r\n                    );\r\n                  })}\r\n              </Nav>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"sub-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              {menuItems &&\r\n                menuItems.map(item => {\r\n                  return (\r\n                    <Nav\r\n                      key={item.id}\r\n                      className={classnames({\r\n                        'd-block':\r\n                          (this.state.selectedParentMenu === item.id &&\r\n                            this.state.viewingParentMenu === '') ||\r\n                          this.state.viewingParentMenu === item.id\r\n                      })}\r\n                      data-parent={item.id}\r\n                    >\r\n                      {item.subs &&\r\n                        item.subs.map((sub, index) => {\r\n                          return (\r\n                            <NavItem\r\n                              key={`${item.id}_${index}`}\r\n                              className={`${\r\n                                sub.subs && sub.subs.length > 0\r\n                                  ? 'has-sub-item'\r\n                                  : ''\r\n                              }`}\r\n                            >\r\n                              {sub.newWindow ? (\r\n                                <a\r\n                                  href={sub.to}\r\n                                  rel=\"noopener noreferrer\"\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  <i className={sub.icon} />{' '}\r\n                                  <IntlMessages id={sub.label} />\r\n                                </a>\r\n                              ) : sub.subs && sub.subs.length > 0 ? (\r\n                                <Fragment>\r\n                                  <NavLink\r\n                                    className={`rotate-arrow-icon opacity-50 ${\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                        ? ''\r\n                                        : 'collapsed'\r\n                                    }`}\r\n                                    to={sub.to}\r\n                                    id={`${item.id}_${index}`}\r\n                                    onClick={e =>\r\n                                      this.toggleMenuCollapse(\r\n                                        e,\r\n                                        `${item.id}_${index}`\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <i className=\"simple-icon-arrow-down\" />{' '}\r\n                                    <IntlMessages id={sub.label} />\r\n                                  </NavLink>\r\n\r\n                                  <Collapse\r\n                                    isOpen={\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                    }\r\n                                  >\r\n                                    <Nav className=\"third-level-menu\">\r\n                                      {sub.subs.map((thirdSub, thirdIndex) => {\r\n                                        return (\r\n                                          <NavItem\r\n                                            key={`${\r\n                                              item.id\r\n                                            }_${index}_${thirdIndex}`}\r\n                                          >\r\n                                            {thirdSub.newWindow ? (\r\n                                              <a\r\n                                                href={thirdSub.to}\r\n                                                rel=\"noopener noreferrer\"\r\n                                                target=\"_blank\"\r\n                                              >\r\n                                                <i className={thirdSub.icon} />{' '}\r\n                                                <IntlMessages\r\n                                                  id={thirdSub.label}\r\n                                                />\r\n                                              </a>\r\n                                            ) : (\r\n                                              <NavLink to={thirdSub.to}>\r\n                                                <i className={thirdSub.icon} />{' '}\r\n                                                <IntlMessages\r\n                                                  id={thirdSub.label}\r\n                                                />\r\n                                              </NavLink>\r\n                                            )}\r\n                                          </NavItem>\r\n                                        );\r\n                                      })}\r\n                                    </Nav>\r\n                                  </Collapse>\r\n                                </Fragment>\r\n                              ) : (\r\n                                <NavLink to={sub.to}>\r\n                                  <i className={sub.icon} />{' '}\r\n                                  <IntlMessages id={sub.label} />\r\n                                </NavLink>\r\n                              )}\r\n                            </NavItem>\r\n                          );\r\n                        })}\r\n                    </Nav>\r\n                  );\r\n                })}\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ menu }) => {\r\n  const {\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems\r\n  } = menu;\r\n  return {\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems\r\n  };\r\n};\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    {\r\n      setContainerClassnames,\r\n      addContainerClassname,\r\n      changeDefaultClassnames,\r\n      changeSelectedMenuHasSubItems\r\n    }\r\n  )(Sidebar)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter} from \"react-router-dom\";\r\n\r\nimport TopNav from \"../containers/navs/Topnav\";\r\nimport Sidebar from \"../containers/navs/Sidebar\";\r\nclass AppLayout extends Component {\r\n  render() {\r\n    const { containerClassnames } = this.props;\r\n    return (\r\n      <div id=\"app-container\" className={containerClassnames}>\r\n        <TopNav history={this.props.history} />\r\n        <Sidebar />\r\n        <main>\r\n          <div className=\"container-fluid\">\r\n          {this.props.children}\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ menu }) => {\r\n  const { containerClassnames } = menu;\r\n  return { containerClassnames };\r\n};\r\nconst mapActionToProps={}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(AppLayout));\r\n","import React, { Component, Suspense } from 'react';\r\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AppLayout from '../../layout/AppLayout';\r\n\r\nconst Gogo = React.lazy(() =>\r\n  import(/* webpackChunkName: \"viwes-gogo\" */ './gogo')\r\n);\r\nconst SecondMenu = React.lazy(() =>\r\n  import(/* webpackChunkName: \"viwes-second-menu\" */ './second-menu')\r\n);\r\nconst BlankPage = React.lazy(() =>\r\n  import(/* webpackChunkName: \"viwes-blank-page\" */ './blank-page')\r\n);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const { match } = this.props;\r\n\r\n    return (\r\n      <AppLayout>\r\n        <div className=\"dashboard-wrapper\">\r\n          <Suspense fallback={<div className=\"loading\" />}>\r\n            <Switch>\r\n              <Redirect exact from={`${match.url}/`} to={`${match.url}/gogo`} />\r\n              <Route\r\n                path={`${match.url}/gogo`}\r\n                render={props => <Gogo {...props} />}\r\n              />\r\n              <Route\r\n                path={`${match.url}/second-menu`}\r\n                render={props => <SecondMenu {...props} />}\r\n              />\r\n              <Route\r\n                path={`${match.url}/blank-page`}\r\n                render={props => <BlankPage {...props} />}\r\n              />\r\n              <Redirect to=\"/error\" />\r\n            </Switch>\r\n          </Suspense>\r\n        </div>\r\n      </AppLayout>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ menu }) => {\r\n  const { containerClassnames } = menu;\r\n  return { containerClassnames };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    {}\r\n  )(App)\r\n);\r\n","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = props => <FormattedMessage {...props} />;\r\n\r\nexport default injectIntl(InjectMassage, {\r\n    withRef: false\r\n});\r\n"],"sourceRoot":""}